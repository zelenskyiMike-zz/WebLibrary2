@model IEnumerable<WebLibrary2.Domain.Entity.Author>

@{
    ViewBag.Title = "List of books";
}
<div>
    <h2>Список авторов</h2>
    <div>
        @Html.ActionLink("To JSON", "SerializeJSON", "Home", null, new { onclick = "return JSONSerializationDialog()", @class = "btn btn-light" })
        @Html.ActionLink("To XML", "SerializeXML", "Home", null, new { onclick = "return XMLSerializationDialog()", @class = "btn btn-light" })
        @Html.ActionLink("From JSON", "DeserializeJSON", "Home", null, new { onclick = "return JSONDeserializationDialog()", @class = "btn btn-light" })
        @Html.ActionLink("From XML", "DeserializeXML", "Home", null, new { onclick = "return XMLDeserializationDialog()", @class = "btn btn-light" })
    </div>
    @*<br />
    <div>
        @Html.ActionLink("Добавить автора", "CreateAuthor", "CRUDAuthor", null, new { @class = "btn btn-outline-primary" })
    </div>
    <br />

    <table>
        <tr>
            <th><h4>Автор</h4></th>
            <th><h4>Действие</h4></th>
        </tr>
        @foreach (var author in Model)
        {
            <tr>

                <td><h4>@Html.DisplayFor(modelItem => author.AuthorName)</h4></td>

                <td>

                    <div class=" btn btn-default">
                        @Html.ActionLink("Редактировать", "EditAuthor", "CRUDAuthor", new { id = author.AuthorID }, null)
                    </div> |
                    <div class=" btn btn-default">
                        @Html.ActionLink("Удалить", "DeleteAuthor", "CRUDAuthor", new { id = author.AuthorID }, null)
                    </div>|
                    <div class=" btn btn-default">
                        @Html.ActionLink("Детали", "AuthorsDetails", "CRUDAuthor", new { id = author.AuthorID }, null)
                    </div>

                </td>
            </tr>
        }
    </table>*@
    <br />
</div>